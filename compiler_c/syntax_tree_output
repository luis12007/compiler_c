// Syntax Tree
digraph {
	SOURCE
	SOURCEBLOCK
	SOURCE -> SOURCEBLOCK
	MAINFUNCTION
	SOURCEBLOCK -> MAINFUNCTION
	SOURCEBLOCK
	INCLUDEBLOCK
	SOURCEBLOCK -> INCLUDEBLOCK
	SOURCEBLOCK
	INCLUDEBLOCK -> SOURCEBLOCK
	INCLUDEBLOCK
	INCLUDESTATEMENT
	INCLUDEBLOCK -> INCLUDESTATEMENT
	INCLUDEBLOCK
	INCLUDESTATEMENT -> INCLUDEBLOCK
	INCLUDESTATEMENT
	"#include"
	INCLUDESTATEMENT -> "#include"
	"<"
	"#include" -> "<"
	VARNAME
	"<" -> VARNAME
	"."
	VARNAME -> "."
	VARNAME
	"." -> VARNAME
	">"
	VARNAME -> ">"
	VARNAME
	stdio
	VARNAME -> stdio
	VARNAME
	h
	VARNAME -> h
	INCLUDEBLOCK
	SOURCEBLOCK
	DEFINEBLOCK
	SOURCEBLOCK -> DEFINEBLOCK
	SOURCEBLOCK
	DEFINEBLOCK -> SOURCEBLOCK
	DEFINEBLOCK
	DEFINESTATEMENT
	DEFINEBLOCK -> DEFINESTATEMENT
	DEFINEBLOCK
	DEFINESTATEMENT -> DEFINEBLOCK
	DEFINESTATEMENT
	"#define"
	DEFINESTATEMENT -> "#define"
	VARNAME
	"#define" -> VARNAME
	DEFINEBODY
	VARNAME -> DEFINEBODY
	VARNAME
	vector
	VARNAME -> vector
	DEFINEBODY
	"<"
	DEFINEBODY -> "<"
	VARNAME
	"<" -> VARNAME
	">"
	VARNAME -> ">"
	VARNAME
	">" -> VARNAME
	VARNAME
	int
	VARNAME -> int
	VARNAME
	vi
	VARNAME -> vi
	DEFINEBLOCK
	DEFINESTATEMENT
	DEFINEBLOCK -> DEFINESTATEMENT
	DEFINEBLOCK
	DEFINESTATEMENT -> DEFINEBLOCK
	DEFINESTATEMENT
	"#define"
	DEFINESTATEMENT -> "#define"
	VARNAME
	"#define" -> VARNAME
	DEFINEBODY
	VARNAME -> DEFINEBODY
	VARNAME
	loop
	VARNAME -> loop
	DEFINEBODY
	PARAM_MACRO_BODY
	DEFINEBODY -> PARAM_MACRO_BODY
	PARAM_MACRO_BODY
	"("
	PARAM_MACRO_BODY -> "("
	PARAMLIST
	"(" -> PARAMLIST
	")"
	PARAMLIST -> ")"
	MACRO_BODY
	")" -> MACRO_BODY
	PARAMLIST
	VARNAME
	PARAMLIST -> VARNAME
	"PARAMLIST'"
	VARNAME -> "PARAMLIST'"
	VARNAME
	x
	VARNAME -> x
	"PARAMLIST'"
	","
	"PARAMLIST'" -> ","
	PARAMLIST
	"," -> PARAMLIST
	PARAMLIST
	VARNAME
	PARAMLIST -> VARNAME
	"PARAMLIST'"
	VARNAME -> "PARAMLIST'"
	VARNAME
	n
	VARNAME -> n
	"PARAMLIST'"
	MACRO_BODY
	for
	MACRO_BODY -> for
	"("
	for -> "("
	FORVAR
	"(" -> FORVAR
	";"
	FORVAR -> ";"
	CONDITION
	";" -> CONDITION
	";"
	CONDITION -> ";"
	VARCHANGESTATEMENT
	";" -> VARCHANGESTATEMENT
	")"
	VARCHANGESTATEMENT -> ")"
	FORVAR
	INITSTATEMENT
	FORVAR -> INITSTATEMENT
	INITSTATEMENT
	INTINIT
	INITSTATEMENT -> INTINIT
	INTINIT
	int
	INTINIT -> int
	VARNAME
	int -> VARNAME
	INTLIST_NO_ASSIGNMENT_OR_WITH_ASSIGNMENT
	VARNAME -> INTLIST_NO_ASSIGNMENT_OR_WITH_ASSIGNMENT
	VARNAME
	x
	VARNAME -> x
	INTLIST_NO_ASSIGNMENT_OR_WITH_ASSIGNMENT
	"="
	INTLIST_NO_ASSIGNMENT_OR_WITH_ASSIGNMENT -> "="
	EXPRESSION_INT
	"=" -> EXPRESSION_INT
	INTLIST
	EXPRESSION_INT -> INTLIST
	EXPRESSION_INT
	TERM_INT
	EXPRESSION_INT -> TERM_INT
	EXPRESSION_TAIL
	TERM_INT -> EXPRESSION_TAIL
	TERM_INT
	0
	TERM_INT -> 0
	EXPRESSION_TAIL
	INTLIST
	CONDITION
	SIMPLE_CONDITION
	CONDITION -> SIMPLE_CONDITION
	SIMPLE_CONDITION
	EXPRESSION
	SIMPLE_CONDITION -> EXPRESSION
	CONDOPERATOR
	EXPRESSION -> CONDOPERATOR
	EXPRESSION
	CONDOPERATOR -> EXPRESSION
	EXPRESSION
	VARNAME
	EXPRESSION -> VARNAME
	VARNAME
	x
	VARNAME -> x
	CONDOPERATOR
	"<"
	CONDOPERATOR -> "<"
	OREQUAL
	"<" -> OREQUAL
	OREQUAL
	EXPRESSION
	VARNAME
	EXPRESSION -> VARNAME
	VARNAME
	n
	VARNAME -> n
	VARCHANGESTATEMENT
	VARIABLE_MODIFICATION
	VARCHANGESTATEMENT -> VARIABLE_MODIFICATION
	VARNAME
	VARIABLE_MODIFICATION -> VARNAME
	VARIABLE_MODIFICATION
	"+"
	VARIABLE_MODIFICATION -> "+"
	MOD_EQUAL
	"+" -> MOD_EQUAL
	MOD_EQUAL
	"+"
	MOD_EQUAL -> "+"
	VARNAME
	x
	VARNAME -> x
	DEFINEBLOCK
	DEFINESTATEMENT
	DEFINEBLOCK -> DEFINESTATEMENT
	DEFINEBLOCK
	DEFINESTATEMENT -> DEFINEBLOCK
	DEFINESTATEMENT
	"#define"
	DEFINESTATEMENT -> "#define"
	VARNAME
	"#define" -> VARNAME
	DEFINEBODY
	VARNAME -> DEFINEBODY
	VARNAME
	macro
	VARNAME -> macro
	DEFINEBODY
	PARAM_MACRO_BODY
	DEFINEBODY -> PARAM_MACRO_BODY
	PARAM_MACRO_BODY
	"("
	PARAM_MACRO_BODY -> "("
	PARAMLIST
	"(" -> PARAMLIST
	")"
	PARAMLIST -> ")"
	MACRO_BODY
	")" -> MACRO_BODY
	PARAMLIST
	VARNAME
	PARAMLIST -> VARNAME
	"PARAMLIST'"
	VARNAME -> "PARAMLIST'"
	VARNAME
	x
	VARNAME -> x
	"PARAMLIST'"
	MACRO_BODY
	"("
	MACRO_BODY -> "("
	CONDITION
	"(" -> CONDITION
	")"
	CONDITION -> ")"
	CONDITION
	SIMPLE_CONDITION
	CONDITION -> SIMPLE_CONDITION
	SIMPLE_CONDITION
	EXPRESSION
	SIMPLE_CONDITION -> EXPRESSION
	CONDOPERATOR
	EXPRESSION -> CONDOPERATOR
	EXPRESSION
	CONDOPERATOR -> EXPRESSION
	EXPRESSION
	VARNAME
	EXPRESSION -> VARNAME
	VARNAME
	x
	VARNAME -> x
	CONDOPERATOR
	"<"
	CONDOPERATOR -> "<"
	OREQUAL
	"<" -> OREQUAL
	OREQUAL
	EXPRESSION
	INTVAL
	EXPRESSION -> INTVAL
	FLOAT_AUX
	INTVAL -> FLOAT_AUX
	INTVAL
	10
	INTVAL -> 10
	FLOAT_AUX
	DEFINEBLOCK
	DEFINESTATEMENT
	DEFINEBLOCK -> DEFINESTATEMENT
	DEFINEBLOCK
	DEFINESTATEMENT -> DEFINEBLOCK
	DEFINESTATEMENT
	"#define"
	DEFINESTATEMENT -> "#define"
	VARNAME
	"#define" -> VARNAME
	DEFINEBODY
	VARNAME -> DEFINEBODY
	VARNAME
	macro3
	VARNAME -> macro3
	DEFINEBODY
	PARAM_MACRO_BODY
	DEFINEBODY -> PARAM_MACRO_BODY
	PARAM_MACRO_BODY
	"("
	PARAM_MACRO_BODY -> "("
	PARAMLIST
	"(" -> PARAMLIST
	")"
	PARAMLIST -> ")"
	MACRO_BODY
	")" -> MACRO_BODY
	PARAMLIST
	VARNAME
	PARAMLIST -> VARNAME
	"PARAMLIST'"
	VARNAME -> "PARAMLIST'"
	VARNAME
	x
	VARNAME -> x
	"PARAMLIST'"
	MACRO_BODY
	"("
	MACRO_BODY -> "("
	CONDITION
	"(" -> CONDITION
	")"
	CONDITION -> ")"
	CONDITION
	SIMPLE_CONDITION
	CONDITION -> SIMPLE_CONDITION
	SIMPLE_CONDITION
	EXPRESSION
	SIMPLE_CONDITION -> EXPRESSION
	CONDOPERATOR
	EXPRESSION -> CONDOPERATOR
	EXPRESSION
	CONDOPERATOR -> EXPRESSION
	EXPRESSION
	VARNAME
	EXPRESSION -> VARNAME
	VARNAME
	x
	VARNAME -> x
	CONDOPERATOR
	"*"
	CONDOPERATOR -> "*"
	OREQUAL
	"*" -> OREQUAL
	OREQUAL
	EXPRESSION
	INTVAL
	EXPRESSION -> INTVAL
	FLOAT_AUX
	INTVAL -> FLOAT_AUX
	INTVAL
	10
	INTVAL -> 10
	FLOAT_AUX
	DEFINEBLOCK
	SOURCEBLOCK
	FUNCTIONBLOCK
	SOURCEBLOCK -> FUNCTIONBLOCK
	SOURCEBLOCK
	FUNCTIONBLOCK -> SOURCEBLOCK
	FUNCTIONBLOCK
	FUNCDEC
	FUNCTIONBLOCK -> FUNCDEC
	FUNCTIONBLOCK
	FUNCDEC -> FUNCTIONBLOCK
	FUNCDEC
	FUNCTYPE
	FUNCDEC -> FUNCTYPE
	FUNCTION
	FUNCTYPE -> FUNCTION
	FUNCTYPE
	int
	FUNCTYPE -> int
	FUNCTION
	VARNAME
	FUNCTION -> VARNAME
	"("
	VARNAME -> "("
	FUNCINIT
	"(" -> FUNCINIT
	")"
	FUNCINIT -> ")"
	"{"
	")" -> "{"
	STATEMENT
	"{" -> STATEMENT
	RETURNSTATEMENT
	STATEMENT -> RETURNSTATEMENT
	"}"
	RETURNSTATEMENT -> "}"
	VARNAME
	factorial
	VARNAME -> factorial
	FUNCINIT
	FUNCINITSTATEMENT
	FUNCINIT -> FUNCINITSTATEMENT
	"FUNCINIT'"
	FUNCINITSTATEMENT -> "FUNCINIT'"
	FUNCINITSTATEMENT
	FUNCINTINIT
	FUNCINITSTATEMENT -> FUNCINTINIT
	FUNCINTINIT
	int
	FUNCINTINIT -> int
	VARNAME
	int -> VARNAME
	FUNCINTAUX
	VARNAME -> FUNCINTAUX
	VARNAME
	n
	VARNAME -> n
	FUNCINTAUX
	"FUNCINIT'"
	STATEMENT
	INITLIST
	STATEMENT -> INITLIST
	STATEMENT
	INITLIST -> STATEMENT
	INITLIST
	INITSTATEMENT
	INITLIST -> INITSTATEMENT
	"INITLIST'"
	INITSTATEMENT -> "INITLIST'"
	";"
	"INITLIST'" -> ";"
	INITSTATEMENT
	INTINIT
	INITSTATEMENT -> INTINIT
	INTINIT
	int
	INTINIT -> int
	VARNAME
	int -> VARNAME
	INTLIST_NO_ASSIGNMENT_OR_WITH_ASSIGNMENT
	VARNAME -> INTLIST_NO_ASSIGNMENT_OR_WITH_ASSIGNMENT
	VARNAME
	result
	VARNAME -> result
	INTLIST_NO_ASSIGNMENT_OR_WITH_ASSIGNMENT
	"="
	INTLIST_NO_ASSIGNMENT_OR_WITH_ASSIGNMENT -> "="
	EXPRESSION_INT
	"=" -> EXPRESSION_INT
	INTLIST
	EXPRESSION_INT -> INTLIST
	EXPRESSION_INT
	TERM_INT
	EXPRESSION_INT -> TERM_INT
	EXPRESSION_TAIL
	TERM_INT -> EXPRESSION_TAIL
	TERM_INT
	1
	TERM_INT -> 1
	INTLIST
	","
	INTLIST -> ","
	VARNAME
	"," -> VARNAME
	INTLIST
	VARNAME -> INTLIST
	VARNAME
	result2
	VARNAME -> result2
	INTLIST
	"="
	INTLIST -> "="
	INTVAL
	"=" -> INTVAL
	INTLIST
	INTVAL -> INTLIST
	INTVAL
	2
	INTVAL -> 2
	INTLIST
	"INITLIST'"
	STATEMENT
	INITLIST
	STATEMENT -> INITLIST
	STATEMENT
	INITLIST -> STATEMENT
	INITLIST
	INITSTATEMENT
	INITLIST -> INITSTATEMENT
	"INITLIST'"
	INITSTATEMENT -> "INITLIST'"
	";"
	"INITLIST'" -> ";"
	INITSTATEMENT
	FLOATINIT
	INITSTATEMENT -> FLOATINIT
	FLOATINIT
	float
	FLOATINIT -> float
	VARNAME
	float -> VARNAME
	FLOATLIST_NO_ASSIGNMENT_OR_WITH_ASSIGNMENT
	VARNAME -> FLOATLIST_NO_ASSIGNMENT_OR_WITH_ASSIGNMENT
	VARNAME
	result2
	VARNAME -> result2
	FLOATLIST_NO_ASSIGNMENT_OR_WITH_ASSIGNMENT
	"="
	FLOATLIST_NO_ASSIGNMENT_OR_WITH_ASSIGNMENT -> "="
	EXPRESSION_FLOAT
	"=" -> EXPRESSION_FLOAT
	FLOATLIST
	EXPRESSION_FLOAT -> FLOATLIST
	EXPRESSION_FLOAT
	TERM_FLOAT
	EXPRESSION_FLOAT -> TERM_FLOAT
	EXPRESSION_TAIL
	TERM_FLOAT -> EXPRESSION_TAIL
	TERM_FLOAT
	FLOATVAL
	TERM_FLOAT -> FLOATVAL
	FLOATVAL
	INTVAL
	FLOATVAL -> INTVAL
	FLOAT_AUX
	INTVAL -> FLOAT_AUX
	INTVAL
	20
	INTVAL -> 20
	FLOAT_AUX
	"."
	FLOAT_AUX -> "."
	FLOAT_AUX
	"." -> FLOAT_AUX
	FLOAT_AUX
	INTVAL
	FLOAT_AUX -> INTVAL
	INTVAL
	2
	INTVAL -> 2
	FLOATLIST
	","
	FLOATLIST -> ","
	VARNAME
	"," -> VARNAME
	FLOATLIST
	VARNAME -> FLOATLIST
	VARNAME
	result3
	VARNAME -> result3
	FLOATLIST
	"="
	FLOATLIST -> "="
	FLOATVAL
	"=" -> FLOATVAL
	FLOATLIST
	FLOATVAL -> FLOATLIST
	FLOATVAL
	INTVAL
	FLOATVAL -> INTVAL
	FLOAT_AUX
	INTVAL -> FLOAT_AUX
	INTVAL
	3
	INTVAL -> 3
	FLOAT_AUX
	"."
	FLOAT_AUX -> "."
	FLOAT_AUX
	"." -> FLOAT_AUX
	FLOAT_AUX
	"3f"
	FLOAT_AUX -> "3f"
	FLOATLIST
	"INITLIST'"
	STATEMENT
	INITLIST
	STATEMENT -> INITLIST
	STATEMENT
	INITLIST -> STATEMENT
	INITLIST
	INITSTATEMENT
	INITLIST -> INITSTATEMENT
	"INITLIST'"
	INITSTATEMENT -> "INITLIST'"
	";"
	"INITLIST'" -> ";"
	INITSTATEMENT
	CHARINIT
	INITSTATEMENT -> CHARINIT
	CHARINIT
	char
	CHARINIT -> char
	VARNAME
	char -> VARNAME
	CHARLIST_NO_ASSIGNMENT_OR_WITH_ASSIGNMENT
	VARNAME -> CHARLIST_NO_ASSIGNMENT_OR_WITH_ASSIGNMENT
	VARNAME
	a
	VARNAME -> a
	CHARLIST_NO_ASSIGNMENT_OR_WITH_ASSIGNMENT
	"="
	CHARLIST_NO_ASSIGNMENT_OR_WITH_ASSIGNMENT -> "="
	CHARVAL
	"=" -> CHARVAL
	CHARLIST
	CHARVAL -> CHARLIST
	CHARVAL
	"'a'"
	CHARVAL -> "'a'"
	CHARLIST
	"INITLIST'"
	STATEMENT
	INITLIST
	STATEMENT -> INITLIST
	STATEMENT
	INITLIST -> STATEMENT
	INITLIST
	INITSTATEMENT
	INITLIST -> INITSTATEMENT
	"INITLIST'"
	INITSTATEMENT -> "INITLIST'"
	";"
	"INITLIST'" -> ";"
	INITSTATEMENT
	FLOATINIT
	INITSTATEMENT -> FLOATINIT
	FLOATINIT
	float
	FLOATINIT -> float
	VARNAME
	float -> VARNAME
	FLOATLIST_NO_ASSIGNMENT_OR_WITH_ASSIGNMENT
	VARNAME -> FLOATLIST_NO_ASSIGNMENT_OR_WITH_ASSIGNMENT
	VARNAME
	eq
	VARNAME -> eq
	FLOATLIST_NO_ASSIGNMENT_OR_WITH_ASSIGNMENT
	"="
	FLOATLIST_NO_ASSIGNMENT_OR_WITH_ASSIGNMENT -> "="
	EXPRESSION_FLOAT
	"=" -> EXPRESSION_FLOAT
	FLOATLIST
	EXPRESSION_FLOAT -> FLOATLIST
	EXPRESSION_FLOAT
	TERM_FLOAT
	EXPRESSION_FLOAT -> TERM_FLOAT
	EXPRESSION_TAIL
	TERM_FLOAT -> EXPRESSION_TAIL
	TERM_FLOAT
	FLOATVAL
	TERM_FLOAT -> FLOATVAL
	FLOATVAL
	INTVAL
	FLOATVAL -> INTVAL
	FLOAT_AUX
	INTVAL -> FLOAT_AUX
	INTVAL
	2
	INTVAL -> 2
	EXPRESSION_TAIL
	OPERATOR
	EXPRESSION_TAIL -> OPERATOR
	TERM_INT
	OPERATOR -> TERM_INT
	EXPRESSION_TAIL
	TERM_INT -> EXPRESSION_TAIL
	OPERATOR
	"/"
	OPERATOR -> "/"
	TERM_INT
	3
	TERM_INT -> 3
	EXPRESSION_TAIL
	OPERATOR
	EXPRESSION_TAIL -> OPERATOR
	TERM_INT
	OPERATOR -> TERM_INT
	EXPRESSION_TAIL
	TERM_INT -> EXPRESSION_TAIL
	OPERATOR
	"*"
	OPERATOR -> "*"
	TERM_INT
	VARNAME
	TERM_INT -> VARNAME
	VARNAME
	result
	VARNAME -> result
	EXPRESSION_TAIL
	OPERATOR
	EXPRESSION_TAIL -> OPERATOR
	TERM_INT
	OPERATOR -> TERM_INT
	EXPRESSION_TAIL
	TERM_INT -> EXPRESSION_TAIL
	OPERATOR
	"^"
	OPERATOR -> "^"
	EXPRESSION_TAIL
	OPERATOR
	EXPRESSION_TAIL -> OPERATOR
	TERM_INT
	OPERATOR -> TERM_INT
	EXPRESSION_TAIL
	TERM_INT -> EXPRESSION_TAIL
	OPERATOR
	"-"
	OPERATOR -> "-"
	TERM_INT
	2
	TERM_INT -> 2
	EXPRESSION_TAIL
	FLOATLIST
	"INITLIST'"
	STATEMENT
	INITLIST
	STATEMENT -> INITLIST
	STATEMENT
	INITLIST -> STATEMENT
	INITLIST
	INITSTATEMENT
	INITLIST -> INITSTATEMENT
	"INITLIST'"
	INITSTATEMENT -> "INITLIST'"
	";"
	"INITLIST'" -> ";"
	INITSTATEMENT
	INTINIT
	INITSTATEMENT -> INTINIT
	INTINIT
	int
	INTINIT -> int
	VARNAME
	int -> VARNAME
	INTLIST_NO_ASSIGNMENT_OR_WITH_ASSIGNMENT
	VARNAME -> INTLIST_NO_ASSIGNMENT_OR_WITH_ASSIGNMENT
	VARNAME
	sum
	VARNAME -> sum
	INTLIST_NO_ASSIGNMENT_OR_WITH_ASSIGNMENT
	"="
	INTLIST_NO_ASSIGNMENT_OR_WITH_ASSIGNMENT -> "="
	EXPRESSION_INT
	"=" -> EXPRESSION_INT
	INTLIST
	EXPRESSION_INT -> INTLIST
	EXPRESSION_INT
	TERM_INT
	EXPRESSION_INT -> TERM_INT
	EXPRESSION_TAIL
	TERM_INT -> EXPRESSION_TAIL
	TERM_INT
	VARNAME
	TERM_INT -> VARNAME
	VARNAME
	result
	VARNAME -> result
	EXPRESSION_TAIL
	OPERATOR
	EXPRESSION_TAIL -> OPERATOR
	TERM_INT
	OPERATOR -> TERM_INT
	EXPRESSION_TAIL
	TERM_INT -> EXPRESSION_TAIL
	OPERATOR
	"/"
	OPERATOR -> "/"
	TERM_INT
	1
	TERM_INT -> 1
	EXPRESSION_TAIL
	OPERATOR
	EXPRESSION_TAIL -> OPERATOR
	TERM_INT
	OPERATOR -> TERM_INT
	EXPRESSION_TAIL
	TERM_INT -> EXPRESSION_TAIL
	OPERATOR
	"+"
	OPERATOR -> "+"
	TERM_INT
	VARNAME
	TERM_INT -> VARNAME
	VARNAME
	result3
	VARNAME -> result3
	EXPRESSION_TAIL
	OPERATOR
	EXPRESSION_TAIL -> OPERATOR
	TERM_INT
	OPERATOR -> TERM_INT
	EXPRESSION_TAIL
	TERM_INT -> EXPRESSION_TAIL
	OPERATOR
	"+"
	OPERATOR -> "+"
	TERM_INT
	2
	TERM_INT -> 2
	EXPRESSION_TAIL
	INTLIST
	"INITLIST'"
	STATEMENT
	INITLIST
	STATEMENT -> INITLIST
	STATEMENT
	INITLIST -> STATEMENT
	INITLIST
	INITSTATEMENT
	INITLIST -> INITSTATEMENT
	"INITLIST'"
	INITSTATEMENT -> "INITLIST'"
	";"
	"INITLIST'" -> ";"
	INITSTATEMENT
	FLOATINIT
	INITSTATEMENT -> FLOATINIT
	FLOATINIT
	float
	FLOATINIT -> float
	VARNAME
	float -> VARNAME
	FLOATLIST_NO_ASSIGNMENT_OR_WITH_ASSIGNMENT
	VARNAME -> FLOATLIST_NO_ASSIGNMENT_OR_WITH_ASSIGNMENT
	VARNAME
	sum2
	VARNAME -> sum2
	FLOATLIST_NO_ASSIGNMENT_OR_WITH_ASSIGNMENT
	"="
	FLOATLIST_NO_ASSIGNMENT_OR_WITH_ASSIGNMENT -> "="
	EXPRESSION_FLOAT
	"=" -> EXPRESSION_FLOAT
	FLOATLIST
	EXPRESSION_FLOAT -> FLOATLIST
	EXPRESSION_FLOAT
	TERM_FLOAT
	EXPRESSION_FLOAT -> TERM_FLOAT
	EXPRESSION_TAIL
	TERM_FLOAT -> EXPRESSION_TAIL
	TERM_FLOAT
	VARNAME
	TERM_FLOAT -> VARNAME
	VARNAME
	result2
	VARNAME -> result2
	EXPRESSION_TAIL
	OPERATOR
	EXPRESSION_TAIL -> OPERATOR
	TERM_INT
	OPERATOR -> TERM_INT
	EXPRESSION_TAIL
	TERM_INT -> EXPRESSION_TAIL
	OPERATOR
	"+"
	OPERATOR -> "+"
	TERM_INT
	VARNAME
	TERM_INT -> VARNAME
	VARNAME
	result3
	VARNAME -> result3
	EXPRESSION_TAIL
	OPERATOR
	EXPRESSION_TAIL -> OPERATOR
	TERM_INT
	OPERATOR -> TERM_INT
	EXPRESSION_TAIL
	TERM_INT -> EXPRESSION_TAIL
	OPERATOR
	"+"
	OPERATOR -> "+"
	TERM_INT
	3
	TERM_INT -> 3
	EXPRESSION_TAIL
	FLOATLIST
	"INITLIST'"
	STATEMENT
	FORLOOP
	STATEMENT -> FORLOOP
	FORLOOP
	for
	FORLOOP -> for
	"("
	for -> "("
	FORVAR
	"(" -> FORVAR
	";"
	FORVAR -> ";"
	CONDITION
	";" -> CONDITION
	";"
	CONDITION -> ";"
	VARCHANGESTATEMENT
	";" -> VARCHANGESTATEMENT
	")"
	VARCHANGESTATEMENT -> ")"
	"{"
	")" -> "{"
	STATEMENT
	"{" -> STATEMENT
	"}"
	STATEMENT -> "}"
	STATEMENT
	"}" -> STATEMENT
	FORVAR
	INITSTATEMENT
	FORVAR -> INITSTATEMENT
	INITSTATEMENT
	INTINIT
	INITSTATEMENT -> INTINIT
	INTINIT
	int
	INTINIT -> int
	VARNAME
	int -> VARNAME
	INTLIST_NO_ASSIGNMENT_OR_WITH_ASSIGNMENT
	VARNAME -> INTLIST_NO_ASSIGNMENT_OR_WITH_ASSIGNMENT
	VARNAME
	i
	VARNAME -> i
	INTLIST_NO_ASSIGNMENT_OR_WITH_ASSIGNMENT
	"="
	INTLIST_NO_ASSIGNMENT_OR_WITH_ASSIGNMENT -> "="
	EXPRESSION_INT
	"=" -> EXPRESSION_INT
	INTLIST
	EXPRESSION_INT -> INTLIST
	EXPRESSION_INT
	TERM_INT
	EXPRESSION_INT -> TERM_INT
	EXPRESSION_TAIL
	TERM_INT -> EXPRESSION_TAIL
	TERM_INT
	1
	TERM_INT -> 1
	EXPRESSION_TAIL
	INTLIST
	CONDITION
	SIMPLE_CONDITION
	CONDITION -> SIMPLE_CONDITION
	SIMPLE_CONDITION
	EXPRESSION
	SIMPLE_CONDITION -> EXPRESSION
	CONDOPERATOR
	EXPRESSION -> CONDOPERATOR
	EXPRESSION
	CONDOPERATOR -> EXPRESSION
	EXPRESSION
	VARNAME
	EXPRESSION -> VARNAME
	VARNAME
	i
	VARNAME -> i
	CONDOPERATOR
	"<"
	CONDOPERATOR -> "<"
	OREQUAL
	"<" -> OREQUAL
	OREQUAL
	"="
	OREQUAL -> "="
	EXPRESSION
	VARNAME
	EXPRESSION -> VARNAME
	VARNAME
	n
	VARNAME -> n
	VARCHANGESTATEMENT
	VARNAME
	VARCHANGESTATEMENT -> VARNAME
	VARIABLE_MODIFICATION
	VARNAME -> VARIABLE_MODIFICATION
	VARNAME
	i
	VARNAME -> i
	VARIABLE_MODIFICATION
	"+"
	VARIABLE_MODIFICATION -> "+"
	MOD_EQUAL
	"+" -> MOD_EQUAL
	MOD_EQUAL
	"+"
	MOD_EQUAL -> "+"
	STATEMENT
	VARNAME
	STATEMENT -> VARNAME
	VARNAMELINE
	VARNAME -> VARNAMELINE
	STATEMENT
	VARNAMELINE -> STATEMENT
	VARNAME
	result
	VARNAME -> result
	VARNAMELINE
	VARCHANGESTATEMENT
	VARNAMELINE -> VARCHANGESTATEMENT
	";"
	VARCHANGESTATEMENT -> ";"
	VARCHANGESTATEMENT
	VARIABLE_MODIFICATION
	VARCHANGESTATEMENT -> VARIABLE_MODIFICATION
	VARIABLE_MODIFICATION
	"="
	VARIABLE_MODIFICATION -> "="
	ARITH_EXPR
	"=" -> ARITH_EXPR
	ARITH_EXPR
	TERM
	ARITH_EXPR -> TERM
	"ARITH_EXPR'"
	TERM -> "ARITH_EXPR'"
	TERM
	FACTOR
	TERM -> FACTOR
	FACTOR
	VARNAME
	FACTOR -> VARNAME
	VARNAME
	result
	VARNAME -> result
	"ARITH_EXPR'"
	"*"
	"ARITH_EXPR'" -> "*"
	TERM
	"*" -> TERM
	"ARITH_EXPR'"
	TERM -> "ARITH_EXPR'"
	TERM
	FACTOR
	TERM -> FACTOR
	FACTOR
	VARNAME
	FACTOR -> VARNAME
	VARNAME
	i
	VARNAME -> i
	"ARITH_EXPR'"
	STATEMENT
	STATEMENT
	IF
	STATEMENT -> IF
	STATEMENT
	IF -> STATEMENT
	IF
	if
	IF -> if
	"("
	if -> "("
	CONDITION
	"(" -> CONDITION
	")"
	CONDITION -> ")"
	"{"
	")" -> "{"
	STATEMENT
	"{" -> STATEMENT
	"}"
	STATEMENT -> "}"
	ELSE
	"}" -> ELSE
	CONDITION
	SIMPLE_CONDITION
	CONDITION -> SIMPLE_CONDITION
	SIMPLE_CONDITION
	EXPRESSION
	SIMPLE_CONDITION -> EXPRESSION
	CONDOPERATOR
	EXPRESSION -> CONDOPERATOR
	EXPRESSION
	CONDOPERATOR -> EXPRESSION
	EXPRESSION
	VARNAME
	EXPRESSION -> VARNAME
	VARNAME
	result2
	VARNAME -> result2
	CONDOPERATOR
	">"
	CONDOPERATOR -> ">"
	OREQUAL
	">" -> OREQUAL
	OREQUAL
	"="
	OREQUAL -> "="
	EXPRESSION
	INTVAL
	EXPRESSION -> INTVAL
	FLOAT_AUX
	INTVAL -> FLOAT_AUX
	INTVAL
	10
	INTVAL -> 10
	FLOAT_AUX
	"."
	FLOAT_AUX -> "."
	FLOAT_AUX
	"." -> FLOAT_AUX
	FLOAT_AUX
	INTVAL
	FLOAT_AUX -> INTVAL
	INTVAL
	0
	INTVAL -> 0
	STATEMENT
	VARNAME
	STATEMENT -> VARNAME
	VARNAMELINE
	VARNAME -> VARNAMELINE
	STATEMENT
	VARNAMELINE -> STATEMENT
	VARNAME
	result
	VARNAME -> result
	VARNAMELINE
	VARCHANGESTATEMENT
	VARNAMELINE -> VARCHANGESTATEMENT
	";"
	VARCHANGESTATEMENT -> ";"
	VARCHANGESTATEMENT
	VARIABLE_MODIFICATION
	VARCHANGESTATEMENT -> VARIABLE_MODIFICATION
	VARIABLE_MODIFICATION
	"="
	VARIABLE_MODIFICATION -> "="
	ARITH_EXPR
	"=" -> ARITH_EXPR
	ARITH_EXPR
	TERM
	ARITH_EXPR -> TERM
	"ARITH_EXPR'"
	TERM -> "ARITH_EXPR'"
	TERM
	FACTOR
	TERM -> FACTOR
	FACTOR
	INTVAL
	FACTOR -> INTVAL
	INTVAL
	10
	INTVAL -> 10
	"ARITH_EXPR'"
	STATEMENT
	INITLIST
	STATEMENT -> INITLIST
	STATEMENT
	INITLIST -> STATEMENT
	INITLIST
	INITSTATEMENT
	INITLIST -> INITSTATEMENT
	"INITLIST'"
	INITSTATEMENT -> "INITLIST'"
	";"
	"INITLIST'" -> ";"
	INITSTATEMENT
	CHARINIT
	INITSTATEMENT -> CHARINIT
	CHARINIT
	char
	CHARINIT -> char
	VARNAME
	char -> VARNAME
	CHARLIST_NO_ASSIGNMENT_OR_WITH_ASSIGNMENT
	VARNAME -> CHARLIST_NO_ASSIGNMENT_OR_WITH_ASSIGNMENT
	VARNAME
	b
	VARNAME -> b
	CHARLIST_NO_ASSIGNMENT_OR_WITH_ASSIGNMENT
	"="
	CHARLIST_NO_ASSIGNMENT_OR_WITH_ASSIGNMENT -> "="
	CHARVAL
	"=" -> CHARVAL
	CHARLIST
	CHARVAL -> CHARLIST
	CHARVAL
	"'b'"
	CHARVAL -> "'b'"
	CHARLIST
	"INITLIST'"
	STATEMENT
	ELSE
	else
	ELSE -> else
	ELSEIF
	else -> ELSEIF
	ELSEIF
	"{"
	ELSEIF -> "{"
	STATEMENT
	"{" -> STATEMENT
	"}"
	STATEMENT -> "}"
	STATEMENT
	VARNAME
	STATEMENT -> VARNAME
	VARNAMELINE
	VARNAME -> VARNAMELINE
	STATEMENT
	VARNAMELINE -> STATEMENT
	VARNAME
	result
	VARNAME -> result
	VARNAMELINE
	VARCHANGESTATEMENT
	VARNAMELINE -> VARCHANGESTATEMENT
	";"
	VARCHANGESTATEMENT -> ";"
	VARCHANGESTATEMENT
	VARIABLE_MODIFICATION
	VARCHANGESTATEMENT -> VARIABLE_MODIFICATION
	VARIABLE_MODIFICATION
	"="
	VARIABLE_MODIFICATION -> "="
	ARITH_EXPR
	"=" -> ARITH_EXPR
	ARITH_EXPR
	TERM
	ARITH_EXPR -> TERM
	"ARITH_EXPR'"
	TERM -> "ARITH_EXPR'"
	TERM
	FACTOR
	TERM -> FACTOR
	FACTOR
	INTVAL
	FACTOR -> INTVAL
	INTVAL
	20
	INTVAL -> 20
	"ARITH_EXPR'"
	STATEMENT
	STATEMENT
	RETURNSTATEMENT
	return
	RETURNSTATEMENT -> return
	OPTIONAL_VARVAL
	return -> OPTIONAL_VARVAL
	";"
	OPTIONAL_VARVAL -> ";"
	OPTIONAL_VARVAL
	ARITH_EXPR
	OPTIONAL_VARVAL -> ARITH_EXPR
	ARITH_EXPR
	TERM
	ARITH_EXPR -> TERM
	"ARITH_EXPR'"
	TERM -> "ARITH_EXPR'"
	TERM
	FACTOR
	TERM -> FACTOR
	FACTOR
	VARNAME
	FACTOR -> VARNAME
	VARNAME
	result
	VARNAME -> result
	"ARITH_EXPR'"
	FUNCTIONBLOCK
	FUNCDEC
	FUNCTIONBLOCK -> FUNCDEC
	FUNCTIONBLOCK
	FUNCDEC -> FUNCTIONBLOCK
	FUNCDEC
	FUNCTYPE
	FUNCDEC -> FUNCTYPE
	VOID_FUNCTION
	FUNCTYPE -> VOID_FUNCTION
	FUNCTYPE
	void
	FUNCTYPE -> void
	VOID_FUNCTION
	FUNCTIONBLOCK
	SOURCEBLOCK
	MAINFUNCTION
	main
	MAINFUNCTION -> main
	"("
	main -> "("
	FUNCINIT
	"(" -> FUNCINIT
	")"
	FUNCINIT -> ")"
	"{"
	")" -> "{"
	STATEMENT
	"{" -> STATEMENT
	RETURNSTATEMENT
	STATEMENT -> RETURNSTATEMENT
	"}"
	RETURNSTATEMENT -> "}"
	SOURCEBLOCK
	"}" -> SOURCEBLOCK
	FUNCINIT
	STATEMENT
	VARNAME
	STATEMENT -> VARNAME
	VARNAMELINE
	VARNAME -> VARNAMELINE
	STATEMENT
	VARNAMELINE -> STATEMENT
	VARNAME
	factorial
	VARNAME -> factorial
	VARNAMELINE
	"("
	VARNAMELINE -> "("
	PARAMLIST
	"(" -> PARAMLIST
	")"
	PARAMLIST -> ")"
	";"
	")" -> ";"
	PARAMLIST
	ARITH_EXPR
	PARAMLIST -> ARITH_EXPR
	"PARAMLIST'"
	ARITH_EXPR -> "PARAMLIST'"
	ARITH_EXPR
	TERM
	ARITH_EXPR -> TERM
	"ARITH_EXPR'"
	TERM -> "ARITH_EXPR'"
	TERM
	FACTOR
	TERM -> FACTOR
	FACTOR
	INTVAL
	FACTOR -> INTVAL
	INTVAL
	1
	INTVAL -> 1
	"ARITH_EXPR'"
	"PARAMLIST'"
	STATEMENT
	RETURNSTATEMENT
	return
	RETURNSTATEMENT -> return
	OPTIONAL_VARVAL
	return -> OPTIONAL_VARVAL
	";"
	OPTIONAL_VARVAL -> ";"
	OPTIONAL_VARVAL
	SOURCEBLOCK
}
