SOURCE -> INCLUDEBLOCK DEFINEBLOCK FUNCTIONBLOCK MAINFUNCTION

INCLUDEBLOCK -> INCLUDESTATEMENT INCLUDEBLOCK
INCLUDEBLOCK -> ɛ

DEFINEBLOCK -> DEFINESTATEMENT DEFINEBLOCK
DEFINEBLOCK -> ɛ

FUNCTIONBLOCK -> FUNCDEC FUNCTIONBLOCK
FUNCTIONBLOCK -> ɛ

STATEMENT -> INITLINE STATEMENT
STATEMENT -> SWITCHSTATEMENT STATEMENT
STATEMENT -> CONDITIONAL STATEMENT
STATEMENT -> LOOPSTATEMENT STATEMENT
STATEMENT -> VARCHANGELINE STATEMENT
STATEMENT -> RETURNSTATEMENT STATEMENT
STATEMENT -> ɛ

CONDITIONAL -> if ( CONDITION ) { STATEMENT } CONDITIONAL_ELSE
CONDITIONAL_ELSE -> else { STATEMENT }
CONDITIONAL_ELSE -> ɛ

SWITCHSTATEMENT -> switch ( VARNAME ) { SWITCHCASELIST }

SWITCHCASELIST -> SWITCHCASE SWITCHCASELIST' DEFAULTCASE
SWITCHCASELIST' -> SWITCHCASE SWITCHCASELIST'
SWITCHCASELIST' -> ɛ
DEFAULTCASE -> default: STATEMENT break;

LOOPSTATEMENT -> FORLOOP
LOOPSTATEMENT -> WHILELOOP
LOOPSTATEMENT -> DOWHILELOOP

FORLOOP -> for ( FORVAR ; CONDITION ; VARCHANGESTATEMENT ) { STATEMENT }

FORVAR -> INITSTATEMENT
FORVAR -> VARNAME

WHILELOOP -> while ( CONDITION ) { STATEMENT }

DOWHILELOOP -> do { STATEMENT } while ( CONDITION )

VARNAME -> [a-zA-Z_][a-zA-Z0-9_]*

KEYWORD -> static
KEYWORD -> const
KEYWORD -> volatile
KEYWORD -> inline
KEYWORD -> ɛ

INCLUDESTATEMENT -> #include < VARNAME . VARNAME >
INCLUDESTATEMENT -> #include " VARNAME . VARNAME "

DEFINESTATEMENT -> #define VARNAME VARNAME
DEFINESTATEMENT -> #define VARNAME { STATEMENT }
DEFINESTATEMENT -> #define FUNCTION

RETURNSTATEMENT -> return VARVAL ;
RETURNSTATEMENT -> return ;

INITLINE -> KEYWORD INITSTATEMENT

INITLIST -> INITSTATEMENT INITLIST'
INITLIST' -> INITSTATEMENT INITLIST'
INITLIST' -> ɛ

INITSTATEMENT -> INTINIT
INITSTATEMENT -> FLOATINIT
INITSTATEMENT -> CHARINIT
INITSTATEMENT -> STRINGINIT
INITSTATEMENT -> DOUBLEINIT
INITSTATEMENT -> LONGINIT
INITSTATEMENT -> SHORTINIT

INTINIT -> int VARNAME INTLIST
INTINIT -> int VARNAME = INTVAL INTLIST

FLOATINIT -> float VARNAME FLOATLIST
FLOATINIT -> float VARNAME = FLOATVAL FLOATLIST

CHARINIT -> char VARNAME CHARLIST
CHARINIT -> char VARNAME = CHARVAL CHARLIST

STRINGINIT -> string VARNAME STRINGLIST
STRINGINIT -> string VARNAME = STRINGVAL STRINGLIST

DOUBLEINIT -> double VARNAME DOUBLELIST
DOUBLEINIT -> double VARNAME = DOUBLEVAL DOUBLELIST

LONGINIT -> long VARNAME LONGLIST
LONGINIT -> long VARNAME = INTVAL LONGLIST

SHORTINIT -> short VARNAME SHORTLIST
SHORTINIT -> short VARNAME = INTVAL SHORTLIST

INTLIST -> , VARNAME INTLIST
INTLIST -> , VARNAME = INTVAL INTLIST
INTLIST -> ɛ

FLOATLIST -> , VARNAME FLOATLIST
FLOATLIST -> , VARNAME = FLOATVAL FLOATLIST
FLOATLIST -> ɛ

CHARLIST -> , VARNAME CHARLIST
CHARLIST -> , VARNAME = CHARVAL CHARLIST
CHARLIST -> ɛ

STRINGLIST -> , VARNAME STRINGLIST
STRINGLIST -> , VARNAME = STRINGVAL STRINGLIST
STRINGLIST -> ɛ

DOUBLELIST -> , VARNAME DOUBLELIST
DOUBLELIST -> , VARNAME = DOUBLEVAL DOUBLELIST
DOUBLELIST -> ɛ

LONGLIST -> , VARNAME LONGLIST
LONGLIST -> , VARNAME = INTVAL LONGLIST
LONGLIST -> ɛ

SHORTLIST -> , VARNAME SHORTLIST
SHORTLIST -> , VARNAME = INTVAL SHORTLIST
SHORTLIST -> ɛ

VARVAL -> ARITH_EXPR

ARITH_EXPR -> TERM ARITH_EXPR'
ARITH_EXPR' -> + TERM ARITH_EXPR'
ARITH_EXPR' -> - TERM ARITH_EXPR'
ARITH_EXPR' -> ɛ

TERM -> FACTOR TERM'
TERM' -> * FACTOR TERM'
TERM' -> / FACTOR TERM'
TERM' -> ɛ

FACTOR -> VARNAME
FACTOR -> INTVAL
FACTOR -> FLOATVAL
FACTOR -> CHARVAL
FACTOR -> STRINGVAL
FACTOR -> DOUBLEVAL
FACTOR -> ( ARITH_EXPR )

INTVAL -> [0-9][0-9]*

FLOATVAL -> [0-9][0-9]*.[0-9]+
FLOATVAL -> [0-9][0-9]*f

CHARVAL -> '[a-zA-Z0-9$&+,:;=?@#|'<>.^*()%!-]*'

STRINGVAL -> "[a-zA-Z0-9$&+,:;=?@#|'<>.^*()%!-]*"

DOUBLEVAL -> [0-9][0-9]*.[0-9]*d
DOUBLEVAL -> [0-9][0-9]*.[0-9]*

MAINFUNCTION -> FUNCTYPE main ( INITLIST ) { STATEMENT RETURNSTATEMENT }
MAINFUNCTION -> void main ( INITLIST ) { STATEMENT RETURNSTATEMENT }

FUNCDEC -> FUNCTYPE FUNCTION

FUNCTION -> VARNAME ( INITLIST ) { STATEMENT RETURNSTATEMENT }

FUNCTYPE -> int
FUNCTYPE -> float
FUNCTYPE -> char
FUNCTYPE -> string
FUNCTYPE -> double
FUNCTYPE -> long
FUNCTYPE -> short
FUNCTYPE -> void

VARCHANGELINE -> VARCHANGESTATEMENT ;

VARCHANGESTATEMENT -> VARNAME VARIABLE_MODIFICATION

VARIABLE_MODIFICATION -> ++
VARIABLE_MODIFICATION -> --
VARIABLE_MODIFICATION -> = ARITH_EXPR
VARIABLE_MODIFICATION -> += ARITH_EXPR
VARIABLE_MODIFICATION -> -= ARITH_EXPR
VARIABLE_MODIFICATION -> *= ARITH_EXPR
VARIABLE_MODIFICATION -> /= ARITH_EXPR

VAROPLIST -> ɛ
VAROPLIST -> PLUS_OPERATION
VAROPLIST -> MINUS_OPERATION
VAROPLIST -> MULTIPLY_OPERATION
VAROPLIST -> DIVIDE_OPERATION

PLUS_OPERATION -> + VARNAME VAROPLIST
PLUS_OPERATION -> + ARITH_EXPR VAROPLIST

MINUS_OPERATION -> - VARNAME VAROPLIST
MINUS_OPERATION -> - ARITH_EXPR VAROPLIST

MULTIPLY_OPERATION -> * VARNAME VAROPLIST
MULTIPLY_OPERATION -> * ARITH_EXPR VAROPLIST

DIVIDE_OPERATION -> / VARNAME VAROPLIST
DIVIDE_OPERATION -> / ARITH_EXPR VAROPLIST
